-- local ok, dap = pcall(require, "dap")
-- if not ok then return end
--
-- vim.keymap.set("n", "<F5>", ":lua require'dap'.continue()<CR>")
-- vim.keymap.set("n", "<F3>", ":lua require'dap'.step_over()<CR>")
-- vim.keymap.set("n", "<F2>", ":lua require'dap'.step_into()<CR>")
-- vim.keymap.set("n", "<F12>", ":lua require'dap'.step_out()<CR>")
-- vim.keymap.set("n", "<leader>b", ":lua require'dap'.toggle_breakpoint()<CR>")
-- vim.keymap.set("n", "<leader>B", ":lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>")
-- vim.keymap.set("n", "<leader>lp", ":lua require'dap'.set_breakpoint(nil, nil, vim.fn.input('Log point message: '))<CR>")
-- vim.keymap.set("n", "<leader>dr", ":lua require'dap'.repl.open()<CR>")
-- -- vim.keymap.set("n", "<leader>dt", ":lua require'dap-go'.debug_test()<CR>")
--
-- require("nvim-dap-virtual-text").setup()
--
-- local ok, dapui = pcall(require, "dapui")
-- if not ok then return end
-- dapui.setup({
--   icons = { expanded = "▾", collapsed = "▸" },
--   mappings = {
--     -- Use a table to apply multiple mappings
--     expand = { "<CR>", "<2-LeftMouse>" },
--     open = "o",
--     remove = "d",
--     edit = "e",
--     repl = "r",
--     toggle = "t",
--   },
--   layouts = {
--     {
--       elements = {
--         "scopes",
--         "breakpoints",
--         "stacks",
--         "watches",
--       },
--       size = 80,
--       position = "left",
--     },
--     {
--       elements = { "repl", "console" },
--       size = 0.25,
--       position = "bottom",
--     },
--   },
--   render = {
--     max_value_lines = 3,
--   },
--   floating = { max_width = 0.9, max_height = 0.5, border = vim.g.border_chars },
-- })
--
-- dap.listeners.after.event_initialized["dapui_config"] = function()
--   dapui.open()
-- end
-- dap.listeners.before.event_terminated["dapui_config"] = function()
--   dapui.close()
-- end
-- dap.listeners.before.event_exited["dapui_config"] = function()
--   dapui.close()
-- end
--
-- require('dap.ext.vscode').load_launchjs()
--
-- -- This is for python debugger.
-- -- Need the installation of debugpy. Check https://github.com/mfussenegger/nvim-dap-python#debugpy
-- require('dap-python').setup('~/.config/nvim/.virtualenvs/debugpy/bin/python')
